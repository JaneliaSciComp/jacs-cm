version: "3.7"

services:

  workstation-site:
    image: ${NAMESPACE}/workstation-site:${WORKSTATION_VERSION}
    # Nginx must run as root
    expose:
      - "8080"
    networks:
      - jacs-net
    deploy:
      placement:
        constraints: [node.labels.jacs_name==node2]
      resources:
        limits:
          cpus: '2'
          memory: 50M
      restart_policy:
        condition: on-failure
        delay: 3s
        max_attempts: 3
        window: 120s

  jacs-dashboard:
    networks:
      - jacs-net
    deploy:
      placement:
        constraints: [node.labels.jacs_name==node1]
      resources:
        limits:
          cpus: '2'
          memory: 20M
        reservations:
          cpus: '1'
          memory: 10M
      restart_policy:
        condition: on-failure
        delay: 3s
        max_attempts: 3
        window: 120s

  ipp:
    networks:
      - jacs-net
    deploy:
      placement:
        constraints: [node.labels.jacs_name==node2]
      resources:
        limits:
          cpus: '2'
          memory: 200M
      restart_policy:
        condition: on-failure
        delay: 3s
        max_attempts: 3
        window: 120s

  api-gateway:
    networks:
      - jacs-net
    depends_on:
      - workstation-site
    deploy:
      placement:
        constraints: [node.labels.jacs_name==node1]
      resources:
        limits:
          cpus: '20'
          memory: 100M
        reservations:
          cpus: '1'
          memory: 20M
      restart_policy:
        condition: on-failure
        delay: 3s
        max_attempts: 3
        window: 120s

  jacs-sync:
    networks:
      - jacs-net
    deploy:
      placement:
        constraints: [node.labels.jacs_name==node1]
      resources:
        limits:
          cpus: '20'
          memory: 40G
        reservations:
          cpus: '2'
          memory: 2G
      restart_policy:
        condition: on-failure
        delay: 3s
        max_attempts: 3
        window: 120s

#  jacs-async:
#    networks:
#      - jacs-net
#    deploy:
#      placement:
#        constraints: [node.labels.jacs_name==node1]
#      resources:
#        limits:
#          cpus: '8'
#          memory: 20G
#        reservations:
#          cpus: '4'
#          memory: 10G
#      restart_policy:
#        condition: on-failure
#        delay: 3s
#        max_attempts: 3
#        window: 120s


  jacs-messaging:
    networks:
      - jacs-net
    deploy:
      placement:
        constraints: [node.labels.jacs_name==node3]
      resources:
        limits:
          cpus: '4'
          memory: 20G
        reservations:
          cpus: '1'
          memory: 1G
      restart_policy:
        condition: on-failure
        delay: 3s
        max_attempts: 3
        window: 120s

  jade-master:
    networks:
      - jacs-net
    deploy:
      placement:
        constraints: [node.labels.jacs_name==node1]
      replicas: 1
      resources:
        limits:
          cpus: '4'
          memory: 2G
        reservations:
          cpus: '1'
          memory: 4G
      restart_policy:
        condition: on-failure
        delay: 3s
        max_attempts: 3
        window: 120s

  jade-agent1:
    networks:
      - jacs-net
    deploy:
      placement:
        constraints: [node.labels.jacs_name==node1]
      resources:
        limits:
          cpus: '4'
          memory: 10G
        reservations:
          cpus: '1'
          memory: 2G
      restart_policy:
        condition: on-failure
        delay: 3s
        max_attempts: 3
        window: 120s

  jade-agent2:
    image: ${NAMESPACE}/jacs-storage:${JACS_STORAGE_VERSION}
    user: ${DOCKER_USER}
    depends_on:
      - jade-master
#     - mongo1
    volumes:
      - ${CONFIG_DIR}/jade:/app/config:ro
      - ${DATA_DIR}:/data
    environment:
      - SERVICE_MODE=agent
      - JACSSTORAGE_CONFIG=/app/config/config.properties
      - JAVA_OPTS=-Xmx3G -Xms1G -Dlogback.configurationFile=/app/config/logback-agent.xml
      - JADE_MASTER_URL=http://jade-master:8080/jacsstorage/master_api/v1
      - JADE_AGENT_EXPOSED_HOST=${JADE_AGENT2_EXPOSED_HOST}
      - JADE_AGENT_EXPOSED_PORT=${JADE_AGENT2_EXPOSED_PORT:-9882}
      - jade_JWT_SecretKey=${JWT_SECRET_KEY}
      - jade_StorageService_ApiKey=${JADE_API_KEY}
      - jade_StorageAgent_BootstrappedVolumes=
    expose:
      - '8080'
    ports:
      - '${JADE_AGENT2_EXPOSED_PORT:-9882}:8080'
    networks:
      - jacs-net
    deploy:
      placement:
        constraints: [node.labels.jacs_name==node2]
      resources:
        limits:
          cpus: '4'
          memory: 10G
        reservations:
          cpus: '1'
          memory: 2G
      restart_policy:
        condition: on-failure
        delay: 3s
        max_attempts: 3
        window: 120s

  jade-agent3:
    image: ${NAMESPACE}/jacs-storage:${JACS_STORAGE_VERSION}
    user: ${DOCKER_USER}
    depends_on:
      - jade-master
#      - mongo1
    volumes:
      - ${CONFIG_DIR}/jade:/app/config:ro
      - ${DATA_DIR}:/data
    environment:
      - SERVICE_MODE=agent
      - JACSSTORAGE_CONFIG=/app/config/config.properties
      - JAVA_OPTS=-Xmx3G -Xms1G -Dlogback.configurationFile=/app/config/logback-agent.xml
      - JADE_MASTER_URL=http://jade-master:8080/jacsstorage/master_api/v1
      - JADE_AGENT_EXPOSED_HOST=${JADE_AGENT3_EXPOSED_HOST}
      - JADE_AGENT_EXPOSED_PORT=${JADE_AGENT3_EXPOSED_PORT:-9883}
      - jade_JWT_SecretKey=${JWT_SECRET_KEY}
      - jade_StorageService_ApiKey=${JADE_API_KEY}
      - jade_StorageAgent_BootstrappedVolumes=
    expose:
      - '8080'
    ports:
      - '${JADE_AGENT3_EXPOSED_PORT:-9883}:8080'
    networks:
      - jacs-net
    deploy:
      placement:
        constraints: [node.labels.jacs_name==node3]
      resources:
        limits:
          cpus: '4'
          memory: 10G
        reservations:
          cpus: '1'
          memory: 2G
      restart_policy:
        condition: on-failure
        delay: 3s
        max_attempts: 3
        window: 120s


