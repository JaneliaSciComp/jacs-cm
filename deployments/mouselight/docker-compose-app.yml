#
# JACS Applications
#
# This service set needs to be composed with the databases defined in docker-compose-db.yml
#

version: '3.7'
services:

  jacs-messaging:
    image: janeliascicomp/jacs-messaging:latest
    user: ${DOCKER_USER}
    depends_on:
      - rabbitmq
      - jacs-sync
    volumes:
      - /opt/data/rabbitmq/backup:/app/backup
    environment:
      - RABBITMQ_HOSTNAME=rabbitmq
      - JACS_URL=http://jacs-sync:8080/api/rest-v2/
      - SYSTEM_OWNER=${SYSTEM_OWNER}
      - RABBITMQ_USER=${RABBITMQ_USER}
      - RABBITMQ_PASSWORD=${RABBITMQ_PASSWORD}
    restart: unless-stopped
    networks:
      - jacs-net

  jade-master:
    image: janeliascicomp/jacs-storage:latest
    user: ${DOCKER_USER}
    depends_on:
      - mongo1
    volumes:
      - /opt/config/jade:/app/config:ro
      - /data:/data
    environment:
      - SERVICE_MODE=master
      - JAVA_OPTS=-Xmx2G -Xms512M -Dlogback.configurationFile=/app/config/logback-master.xml
      - JACSSTORAGE_CONFIG=/app/config/config.properties
      - jade_JWT_SecretKey=${JWT_SECRET_KEY}
      - jade_MongoDB_ServerName=mongo1:27017,mongo2:27017,mongo3:27017
      - jade_MongoDB_AuthDatabase=${MONGODB_INIT_DATABASE}
      - jade_MongoDB_Username=${MONGODB_APP_USERNAME}
      - jade_MongoDB_Password=${MONGODB_APP_PASSWORD}
    expose:
      - '8080'
    ports:
      - '9880:8080'
    restart: unless-stopped
    networks:
      - jacs-net

  jade-agent1:
    image: janeliascicomp/jacs-storage:latest
    user: ${DOCKER_USER}
    depends_on:
      - jade-master
      - mongo1
    volumes:
      - /opt/config/jade:/app/config:ro
      - /data:/data
    environment:
      - SERVICE_MODE=agent
      - JACSSTORAGE_CONFIG=/app/config/config.properties
      - JAVA_OPTS=-Xmx2G -Xms512M -Dlogback.configurationFile=/app/config/logback-agent.xml
      - JADE_MASTER_URL=http://jade-master:8080/jacsstorage/master_api/v1
      - JADE_AGENT_EXPOSED_HOST=${JADE_AGENT_EXPOSED_HOST}
      - JADE_AGENT_EXPOSED_PORT=${JADE_AGENT_EXPOSED_PORT:-9881}
      - jade_JWT_SecretKey=${JWT_SECRET_KEY}
      - jade_MongoDB_ServerName=mongo1:27017,mongo2:27017,mongo3:27017
      - jade_MongoDB_AuthDatabase=${MONGODB_INIT_DATABASE}
      - jade_MongoDB_Username=${MONGODB_APP_USERNAME}
      - jade_MongoDB_Password=${MONGODB_APP_PASSWORD}
      - jade_StorageAgent_BootstrappedVolumes=jade1
    expose:
      - '8080'
    ports:
      - '${JADE_AGENT_EXPOSED_PORT:-9881}:8080'
    restart: unless-stopped
    networks:
      - jacs-net

  jade-agent2:
    image: janeliascicomp/jacs-storage:latest
    user: ${DOCKER_USER}
    depends_on:
      - jade-master
      - mongo1
    volumes:
      - /opt/config/jade:/app/config:ro
      - /data:/data
    environment:
      - SERVICE_MODE=agent
      - JACSSTORAGE_CONFIG=/app/config/config.properties
      - JAVA_OPTS=-Xmx2G -Xms512M -Dlogback.configurationFile=/app/config/logback-agent.xml
      - JADE_MASTER_URL=http://jade-master:8080/jacsstorage/master_api/v1
      - JADE_AGENT_EXPOSED_HOST=${JADE_AGENT2_EXPOSED_HOST}
      - JADE_AGENT_EXPOSED_PORT=${JADE_AGENT2_EXPOSED_PORT:-9882}
      - jade_JWT_SecretKey=${JWT_SECRET_KEY}
      - jade_MongoDB_ServerName=mongo1:27017,mongo2:27017,mongo3:27017
      - jade_MongoDB_AuthDatabase=${MONGODB_INIT_DATABASE}
      - jade_MongoDB_Username=${MONGODB_APP_USERNAME}
      - jade_MongoDB_Password=${MONGODB_APP_PASSWORD}
      - jade_StorageAgent_BootstrappedVolumes=jade2
    expose:
      - '8080'
    ports:
      - '${JADE_AGENT2_EXPOSED_PORT:-9882}:8080'
    restart: unless-stopped
    networks:
      - jacs-net


  jacs-sync:
    image: janeliascicomp/jacs-sync:latest
    user: ${DOCKER_USER}
    volumes:
      - /opt/config/jacs-sync:/app/config
    environment:
      - JACS2_CONFIG=/app/config/jacs.properties
      - JACS2_SYNCWEB_OPTS=-Dlogback.configurationFile=/app/config/logback.xml
      - jacs_JWT_SecretKey=${JWT_SECRET_KEY}
      - jacs_MongoDB_ServerName=mongo1:27017,mongo2:27017,mongo3:27017
      - jacs_MongoDB_AuthDatabase=${MONGODB_INIT_DATABASE}
      - jacs_MongoDB_Username=${MONGODB_APP_USERNAME}
      - jacs_MongoDB_Password=${MONGODB_APP_PASSWORD}
      - jacs_mouselight_db_user=${MYSQL_JACS_USER}
      - jacs_mouselight_db_password=${MYSQL_ROOT_PASSWORD}
    expose:
      - "8080"
    depends_on:
      - mongo1
    restart: unless-stopped
    networks:
      - jacs-net

  jacs-async:
    image: janeliascicomp/jacs-async:latest
    user: ${DOCKER_USER}
    volumes:
      - /opt/config/jacs-async:/app/config:ro
      - /data:/data
    environment:
      - HOSTNAME=jacs-async
      - JACS2_CONFIG=/app/config/jacs.properties
      - JACS2_ASYNCWEB_OPTS=-Dlogback.configurationFile=/app/config/logback.xml
      - jacs_JWT_SecretKey=${JWT_SECRET_KEY}
      - jacs_MongoDB_ServerName=mongo1:27017,mongo2:27017,mongo3:27017
      - jacs_MongoDB_AuthDatabase=${MONGODB_INIT_DATABASE}
      - jacs_MongoDB_Username=${MONGODB_APP_USERNAME}
      - jacs_MongoDB_Password=${MONGODB_APP_PASSWORD}
      - jacs_mouselight_db_user=${MYSQL_JACS_USER}
      - jacs_mouselight_db_password=${MYSQL_ROOT_PASSWORD}
      - jacs_service_queue_id=${JACS_QUEUE_ID}
    expose:
      - "8080"
    depends_on:
      - mongo1
    restart: unless-stopped
    networks:
      - jacs-net

  workstation-site:
    # Nginx must run as root
    image: janeliascicomp/workstation-site:latest
    expose:
      - "8080"
    ports:
      - "8080:8080"
    restart: unless-stopped
    networks:
      - jacs-net

  api-gateway:
    # This container must run as root in order to bind to port 443
    image: janeliascicomp/api-gateway:latest
    volumes:
      - /opt/config/certs:/app/certs:ro
      - /opt/config/api-gateway/nginx.conf:/usr/local/openresty/nginx/conf/nginx.conf:ro
    environment:
      - JWT_SECRET=${JWT_SECRET_KEY}
    ports:
      - "443:443"
      - "8090:8090"
    depends_on:
      - jacs-sync
      - jacs-async
      - jade-master
      - workstation-site
    restart: unless-stopped
    networks:
      - jacs-net


