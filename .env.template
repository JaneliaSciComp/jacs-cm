# Which deployment to use (valid options are subdirectories found under ./deployments/)
DEPLOYMENT=jacs

# If you are deploying multiple stacks on the same Swarm, this will need to vary.
COMPOSE_PROJECT_NAME=jacs

# Namespace prefix for container tags. If no registry is specified, Docker Hub is assumed.
NAMESPACE=janeliascicomp

# User/group of the local user who runs containers.
UNAME=docker-nobody
GNAME=docker-nobody

# Hostnames for the hosts being used in the deployment
HOST1=
HOST2=
HOST3=

# Redundant storage (e.g. RAID10) used for configurations and databases
REDUNDANT_STORAGE=/opt/$COMPOSE_PROJECT_NAME

# Non-redundant storage (e.g. JBOD) used for secondary/processed imagery
NON_REDUNDANT_STORAGE=/data

# Location for configuration files to be mounted into containers.
CONFIG_DIR=$REDUNDANT_STORAGE/config

# Location for database files. Stored on a failure-tolerant filesystem with redundancy. Needs at least 100 GB of space.
DB_DIR=$REDUNDANT_STORAGE/db

# This is a filesystem without redundancy for secondary data files (e.g. those stored JADE). Hundreds of TB.
DATA_DIR=$NON_REDUNDANT_STORAGE

# Directories for data backups. Ideally, these should be NFS mounted directories, or at least a filesystem that's different from DB_DIR.
BACKUPS_DIR=$NON_REDUNDANT_STORAGE/backups

# Subject for self-signed certificate generation. Can be ignored if you have an official certificate.
CERT_SUBJ=/C=US/ST=VA/L=Ashburn/O=Janelia/CN=$HOST1

# Secret key for creating JWS tokens. Must be 32 characters long.
#
# An easy way to generate a random token is this:
#   openssl rand -base64 32
#
JWT_SECRET_KEY=

# Secret key for the Mongo cluster.
#
# An easy way to generate a random token is this:
#   openssl rand -base64 32
#
MONGODB_SECRET_KEY=

# Mongo initial root account
MONGODB_INIT_ROOT_USERNAME=root
MONGODB_INIT_ROOT_PASSWORD=
MONGODB_INIT_DATABASE=admin

# MongoDB app account
MONGODB_APP_USERNAME=app
MONGODB_APP_PASSWORD=

# How internal services connect to MongoDB. Normally the default is fine, but changing this might be
# useful if you want to use a MongoDB that's running outside of the swarm.
MONGODB_SERVER=mongo1:27017,mongo2:27017,mongo3:27017

# MySQL initial root password
MYSQL_ROOT_PASSWORD=

# MySQL database name
MYSQL_DATABASE=flyportal

# MySQL database user
MYSQL_JACS_USER=root

# MySQL database password
MYSQL_JACS_PASSWORD=$MYSQL_ROOT_PASSWORD

# This is how internal services connect to MySQL. Normally the default is fine, but this can be used to
# connect to an external MySQL, or to change connection properties.
MYSQL_URL=jdbc:mysql://mysql:3306/flyportal?useCursorFetch=true&rewriteBatchedStatements=true&useServerPrepStmts=true&cachePrepStmts=true

# Hostname for access to the host that RabbitMQ runs on. Usually the same as API_GATEWAY_EXPOSED_HOST.
RABBITMQ_EXPOSED_HOST=$HOST1

# User account for RabbitMQ
RABBITMQ_USER=admin
RABBITMQ_PASSWORD=

# Hostname for access to the host that the containers run on. Usually this should be set to the result of `hostname` or another DNS alias.
API_GATEWAY_EXPOSED_HOST=$HOST1

# Host/port for the Docker host running the Jade Agent. Usually this should be set to the result of `hostname` or another DNS alias. 
JADE_AGENT_EXPOSED_HOST=$HOST1
JADE_AGENT_EXPOSED_PORT=9881

# Host/port for the Docker host running the secondary Jade Agent. The port must be different from JADE_AGENT_EXPOSED_PORT.
JADE_AGENT2_EXPOSED_HOST=$HOST2
JADE_AGENT2_EXPOSED_PORT=9882

# Host/port for the Docker host running the third Jade Agent.
JADE_AGENT3_EXPOSED_HOST=$HOST3
JADE_AGENT3_EXPOSED_PORT=9883

# Unique id for jacs-async processing. This only comes into play when you have more than one jacs-async instance.
JACS_QUEUE_ID=jacs-cm

# Password for keystore used for signing NBMs
KEYSTORE_PASSWORD=

# SMTP mail server for sending bug report emails from the Workstation
MAIL_SERVER=

# By default, all Docker/Compose/Swarm commands are run using sudo. Clear this variable to run them as your normal user.
SUDO=sudo

# Command used to invoke Docker
DOCKER=docker

# Command used to invoke Docker Compose
DOCKER_COMPOSE=docker-compose

