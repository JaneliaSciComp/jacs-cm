# Which deployment to use (valid options are subdirectories found under ./deployments/)
DEPLOYMENT=jacs

# Which stage environment to use (e.g. dev, prod, etc.)
STAGE=prod

# If you are deploying multiple stacks on the same Swarm, this will need to vary.
COMPOSE_PROJECT_NAME=jacs

# Namespace prefix for container tags. If no registry is specified, Docker Hub is assumed.
NAMESPACE=janeliascicomp

# Namespace prefix for `publish` command. This is not necessary unless you're building and distributing JACS.
PUBLISHING_NAMESPACE=

# User/group of the local user who runs containers.
UNAME=docker-nobody
GNAME=docker-nobody

# Hostnames for the hosts being used in the deployment
HOST1=
HOST2=
HOST3=

# Redundant storage (e.g. RAID10) used for configurations and databases
REDUNDANT_STORAGE=/opt/$COMPOSE_PROJECT_NAME

# Non-redundant storage (e.g. JBOD) used for secondary/processed imagery
NON_REDUNDANT_STORAGE=/data

# Location for configuration files to be mounted into containers.
CONFIG_DIR=$REDUNDANT_STORAGE/config

# Location for database files. Stored on a failure-tolerant filesystem with redundancy. Needs at least 100 GB of space.
DB_DIR=$REDUNDANT_STORAGE/db

# This is a filesystem without redundancy for secondary data files (e.g. those stored JADE). Hundreds of TB.
DATA_DIR=$NON_REDUNDANT_STORAGE

# Directories for data backups. Ideally, these should be NFS mounted directories, or at least a filesystem that's different from DB_DIR.
BACKUPS_DIR=$NON_REDUNDANT_STORAGE/backups

# Subject for self-signed certificate generation. Can be ignored if you have an official certificate.
CERT_SUBJ=/C=US/ST=VA/L=Ashburn/O=Janelia/CN=$HOST1

# Secret key for creating JWS tokens. Must be 32 characters long.
#
# An easy way to generate a random token is this:
#   openssl rand -base64 32
#
JWT_SECRET_KEY=

MONGO_VERSION=4.4.11
# Secret key for the Mongo cluster.
#
# An easy way to generate a random token is this:
#   openssl rand -base64 32
#
MONGODB_SECRET_KEY=

# Mongo initial root account
MONGODB_INIT_ROOT_USERNAME=root
MONGODB_INIT_ROOT_PASSWORD=
MONGODB_INIT_DATABASE=admin

# MongoDB app account
MONGODB_APP_USERNAME=app
MONGODB_APP_PASSWORD=

# How internal services connect to MongoDB. Normally the default is fine, but changing this might be
# useful if you want to use a MongoDB that's running outside of the swarm.
MONGODB_SERVER=mongo1:27017,mongo2:27017,mongo3:27017

# Hostname for access to the host that RabbitMQ runs on. Usually the same as API_GATEWAY_EXPOSED_HOST.
RABBITMQ_EXPOSED_HOST=$HOST1

# User account for RabbitMQ
RABBITMQ_USER=admin
RABBITMQ_PASSWORD=

# Hostname for access to the host that the containers run on. Usually this should be set to the result of `hostname` or another DNS alias.
API_GATEWAY_EXPOSED_HOST=$HOST1

# Host/port for the Docker host running the Jade Agent. Usually this should be set to the result of `hostname` or another DNS alias. 
JADE_AGENT_EXPOSED_HOST=$HOST1
JADE_AGENT_EXPOSED_PORT=9881
JADE_AGENT_VOLUMES=

# Host/port for the Docker host running the secondary Jade Agent. The port must be different from JADE_AGENT_EXPOSED_PORT.
JADE_AGENT2_EXPOSED_HOST=$HOST2
JADE_AGENT2_EXPOSED_PORT=9882
JADE_AGENT2_VOLUMES=

# Host/port for the Docker host running the third Jade Agent.
JADE_AGENT3_EXPOSED_HOST=$HOST3
JADE_AGENT3_EXPOSED_PORT=9883
JADE_AGENT3_VOLUMES=

# Secret API keys which allow access to resources without login. Used for system integration.
JACS_API_KEY=
JADE_API_KEY=

# Unique id for jacs-async processing. This only comes into play when you have more than one jacs-async instance.
JACS_QUEUE_ID=jacs-cm

# Default max memory for the Workstation client (using during workstation-site container build)
WORKSTATION_CLIENT_MEM=8192m

# Direct URL to the sync server, for indexing
JACS_SYNC_HOST=jacs-sync
JACS_SYNC_PORT=8080
JACS_SYNC_SERVER=http://${JACS_SYNC_HOST}:${JACS_SYNC_PORT}

# Direct URL to the async server, for launching maintenance tasks
JACS_ASYNC_HOST=jacs-async
JACS_ASYNC_PORT=8080
JACS_ASYNC_SERVER=http://${JACS_ASYNC_HOST}:${JACS_ASYNC_PORT}

# Leave search memory settings empty if you want to use the defaults (30GB)
# If you want to set them keep in mind that our search requires 30GB of memory
SEARCH_INIT_MEM_SIZE=
SEARCH_MAX_MEM_SIZE=

# SMTP mail server for sending bug report emails from the Workstation
MAIL_SERVER=
MAIL_USER=
MAIL_PASSWORD=
FROM_EMAIL=jira-default@janelia.hhmi.org
SUPPORT_EMAIL=workstation-support@janelia.hhmi.org


ELASTIC_VERSION=8.5.0
ELASTIC_CLUSTER_NAME=jacs-es-cluster

ELK_WHITELIST=

# ELK stack encryption keys - these could be generated using
# /usr/share/kibana/bin/kibana_encryption_key if you have access to it or simply by using openssl
# Key used to encrypt session information
ELK_SECURITY_KEY=security_key
# Key used to encrypt stored objects such as dashboards and visualizations
ELK_SAVED_OBJECTS_KEY=saved_objects_key
# Key used to encrypt saved reports
ELK_REPORTING_KEY=reports_key

KIBANA_USER=
KIBANA_PASS=

# You can use this to prepend sudo to all docker and docker-compose commands, if your set up requires it.
SUDO=

# set this only if docker-compose supports '--env-file' parameter otherwise comment it out of .env.config
ENV_FILE_PARAM=.env

# Command used to invoke Docker
DOCKER=docker

# Command used to invoke Docker Compose
DOCKER_COMPOSE=docker-compose
