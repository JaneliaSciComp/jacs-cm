# OpenResty Configuration

#user  nobody;
worker_processes  1;

error_log  logs/error.log  info;

events {
    worker_connections  1024;
}

env NGINX_SERVERNAME;              # Server name
env JWT_SECRET;                    # Your JWT secret. No default
env JWT_SECRET_IS_BASE64_ENCODED;  # Indicate if this secret is base64 encoded already. Default is false
env AUTHORIZATION_HEADER;          # The Authorization header to look for. ie: "Authorization: ".  Default is "Authorization"
env AUTHORIZATION_PREFIX;          # The Authorization prefix to look for: ie. "Bearer "  - (example: "Authorization: Bearer abcdefgh12345...".  Default is "Bearer"
env LOG_TOKEN;                     # Optionally enable logging of the token for debugging. Default is false.

http {
    include       mime.types;
    default_type  application/octet-stream;

    # Default NGINX access log format for reference
    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    log_format upstream '$remote_addr "$http_username" "$http_application_id" [$time_local] '
                        '$request status=$status request_bytes=$request_length response_bytes=$bytes_sent '
                        '"$http_referer" "$http_user_agent" '
                        'ua=$upstream_addr rt=$request_time uct=$upstream_connect_time uht=$upstream_header_time urt=$upstream_response_time';
    access_log  logs/access.log  upstream;

    # Larger buffers so that things stay in memory, rather than swapping to disk
    proxy_buffers 16 512k;
    proxy_buffer_size 128k;
    client_body_buffer_size 50M;
    client_max_body_size 512M;

    # Reduce likelihood of 504 Gateway Timeout errors
    proxy_connect_timeout       60s;
    proxy_send_timeout          120s;
    proxy_read_timeout          120s;
    send_timeout                120s;

    server {
        server_name               localhost;
        listen                    443;
        ssl on;
        ssl_certificate           /app/certs/cert.crt;
        ssl_certificate_key       /app/certs/cert.key;
        ssl_session_cache         builtin:1000  shared:SSL:10m;
        ssl_session_timeout       5m;
        ssl_protocols             TLSv1 TLSv1.1 TLSv1.2;
        ssl_ciphers               HIGH:!aNULL:!eNULL:!EXPORT:!CAMELLIA:!DES:!MD5:!PSK:!RC4;
        ssl_prefer_server_ciphers on;

        resolver                  10.40.2.51;

        location / {
            root   html;
            index  index.html index.htm;
        }

        # If you add a service here, you also need to update the index at 
        # /usr/local/openresty/nginx/html/index.html

        # Trailing slashes are needed on both location and proxy_pass here, 
        # otherwise the location URL is sent to the proxy. 
        location /SCSW/AuthenticationService/v1/ {
            proxy_pass http://auth-service:3000/;
            include api.conf;
            include cors.conf;
        }

        location /SCSW/WorkstationMetadata/v1/ {
            proxy_pass http://jacs-dev.int.janelia.org:8180/rest-v1/;
            include api.conf;
            include jwt.conf;
            include cors.conf;
        }

        location /SCSW/WorkstationMetadata/v2/ {
            proxy_pass http://jacs-dev.int.janelia.org:8180/rest-v2/;
            include api.conf;
            include jwt.conf;
            include cors.conf;
        }

        location /SCSW/WorkstationMetadata/v3/ {
            proxy_pass http://jacs-dev.int.janelia.org:8180/rest-v3/;
            include api.conf;
            include jwt.conf;
            include cors.conf;
        }

        location /SCSW/JaneliaFileServices/v1/ {
            proxy_pass http://jacs-webdav1.int.janelia.org:8880/JFS/;
            include api.conf;
            include jwt.conf;
            include cors.conf;
        }

        location /SCSW/JACS2SyncServices/v2/ {
            proxy_pass http://jacs-sync:8080/api/rest-v2/;
            include api.conf;
            include jwt.conf;
            include cors.conf;
        }

        location /SCSW/JACS2AsyncServices/v2/ {
            proxy_pass http://jacs-async:8080/api/rest-v2/;
            include api.conf;
            include jwt.conf;
            include cors.conf;
        }

        location /SCSW/SageResponder/v1/ {
            proxy_pass http://informatics-flask.int.janelia.org:83/sage_responder/;
            # Setting host makes the redirect break 
            #include api.conf;
            include jwt.conf;
            include cors.conf;
            # This is needed because SAGE Responder redirects to add a trailing slash on everything. We need to follow that redirect internally.
            proxy_intercept_errors on;
            error_page 301 302 307 = @handle_redirect;
        }

        location /SCSW/JADEServices/v1 {
            proxy_pass http://jade-master:8080/jacsstorage/master_api/v1;
            include api.conf;
            include jwt.conf;
            include cors.conf;
        }

        location @handle_redirect {
            set $saved_redirect_location '$upstream_http_location';
            proxy_pass $saved_redirect_location;
        }
    }
    server {
        server_name localhost
        listen      8080;
        root        /app/jacs-dashboard/current/build;
        index       index.html;
        location / {
            try_files $uri /index.html;
        }
    }

}
